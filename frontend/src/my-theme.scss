

// @use '@angular/material' as mat;
// @use "sass:map";

// @include mat.core();

// $light-primary: mat.define-palette(mat.$indigo-palette, 500);
// $light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
// $light-warn: mat.define-palette(mat.$pink-palette, A200, A100, A400);


// $dark-primary: mat.define-palette(mat.$indigo-palette, 500);
// $dark-accent: mat.define-palette(mat.$yellow-palette, 600,700,800);
// $dark-warn:  mat.define-palette(mat.$brown-palette, 500);

// $my-theme: mat.define-light-theme((
//  color: (
//    primary: $light-primary,
//    accent: $light-accent,
//    warn: $light-warn,
//  ),
//  typography: mat.define-typography-config(),
//  density: 0,
// ));

// $my-theme: mat.define-dark-theme((
//  color: (
//    primary: $dark-accent,
//    accent: $dark-primary,
//    warn: $dark-warn,
//  ),
//  typography: mat.define-typography-config(),
//  density: 0,
// ));



// $custom-colors: (
//   custom-color-a: mat.get-color-from-palette(mat.$green-palette, 500),
//   custom-color-b: mat.get-color-from-palette(mat.$green-palette, 200)
// );

// .custom-class-a {
//   background-color: map-get($custom-colors, custom-color-a);
//   color: map-get($custom-colors, custom-color-b);
// }


// $backgroundColor: rgb(2, 6, 18);
// $color: map.get($my-theme, "color");
// $colorBackground: map.get($color, "background");
// $colorBackground: map.set($colorBackground, "background", $backgroundColor);
// $color: map.set($color, "background", $colorBackground);
// $my-theme: map.set($my-theme, "color", $color);

// @include mat.all-component-themes($my-theme);



// // // // Apply the dark theme by default
// // // @include mat.core-theme($dark-theme);
// // // @include mat.button-theme($dark-theme);

// // // // Apply the light theme only when the user prefers light themes.
// // // @media (prefers-color-scheme: light) {
// // //  // Use the `-color` mixins to only apply color styles without reapplying the same
// // //  // typography and density styles.
// // //  @include mat.core-color($light-theme);
// // //  @include mat.button-color($light-theme);
// // // }


// // // @use '@angular/material' as mat;

// // // @include mat.core();

// // // // Define a dark theme
// // // $dark-theme: mat.define-dark-theme((
// // //  color: (
// // //    primary: mat.define-palette(mat.$pink-palette),
// // //    accent: mat.define-palette(mat.$blue-grey-palette),
// // //  ),
// // //   // Only include `typography` and `density` in the default dark theme.
// // //   typography: mat.define-typography-config(),
// // //   density: 0,
// // // ));

// // // // Define a light theme
// // // $light-theme: mat.define-light-theme((
// // //  color: (
// // //    primary: mat.define-palette(mat.$indigo-palette),
// // //    accent: mat.define-palette(mat.$pink-palette),
// // //  ),
// // // ));

// // // // Apply the dark theme by default
// // // @include mat.core-theme($dark-theme);
// // // @include mat.button-theme($dark-theme);

// // // // Apply the light theme only when the user prefers light themes.
// // // @media (prefers-color-scheme: light) {
// // //  // Use the `-color` mixins to only apply color styles without reapplying the same
// // //  // typography and density styles.
// // //  @include mat.core-color($light-theme);
// // //  @include mat.button-color($light-theme);
// // /a/ }


// generated at https://theme-builder-1623190217839.web.app/
@use '@angular/material' as mat;

// Be sure that you only ever include this mixin once!
@include mat.core();
@include mat.legacy-core();
@include mat.all-legacy-component-typographies();
// Define your theme with color palettes, typography and density

$mat-theme-primary-palette: map-merge(mat.$amber-palette, ( contrast: (100: #1b0518,)));
$mat-theme-primary: mat.define-palette(
  $mat-theme-primary-palette,
  $default: 100,
  $lighter: 100,
  $darker: 700,
  $text: 500
);

$mat-theme-accent-palette: map-merge(mat.$teal-palette, ( contrast: (A100: white,A200: white,)));
$mat-theme-accent: mat.define-palette(
  $mat-theme-accent-palette,
  $default: 500,
  $lighter: A100,
  $darker: A200,
  $text: 600
);

$mat-theme-warn-palette: map-merge(mat.$pink-palette, ( ));
$mat-theme-warn: mat.define-palette(
  $mat-theme-warn-palette,
  $default: A200,
  $lighter: 500,
  $darker: 500,
  $text: A700
);

$mat-dark-theme-primary-palette: map-merge(mat.$amber-palette, ( contrast: (200: #000000,50: rgba(0,0,0, 0.87),A700: rgba(0,0,0, 0.87), 700: red)));
$mat-dark-theme-primary: mat.define-palette(
  $mat-dark-theme-primary-palette,
  $default: 200,
  $lighter: 50,
  $darker: A700,
  $text: 700
);

$mat-dark-theme-accent-palette: map-merge(mat.$teal-palette, ( contrast: (A200: black,50: black,A400: black,)));
$mat-dark-theme-accent: mat.define-palette(
  $mat-dark-theme-accent-palette,
  $default: A400,
  $lighter: 50,
  $darker: A700,
  $text: A100
);

$mat-dark-theme-warn-palette: map-merge(mat.$pink-palette, ( contrast: (A100: black,100: white,)));
$mat-dark-theme-warn: mat.define-palette(
  $mat-dark-theme-warn-palette,
  $default: A100,
  $lighter: 100,
  $darker: A700,
  $text: 100
);

@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300&display=swap');


$mat-density: 0;

$mat-core-theme: mat.define-light-theme((
  color: (
    primary: $mat-theme-primary,
    accent: $mat-theme-accent,
    warn: $mat-theme-warn
  ),
  typography: mat.define-typography-config(),
  density: $mat-density
));

$mat-dark-theme: mat.define-dark-theme((
  color: (
    primary: $mat-dark-theme-primary,
    accent: $mat-dark-theme-accent,
    warn: $mat-dark-theme-warn,
  ),
));

@include mat.all-component-themes($mat-dark-theme);

// .dark-theme {
//   @include mat.all-component-colors($mat-dark-theme);
// }